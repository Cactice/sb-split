{"version":3,"file":"static/webpack/static/development/pages/listPage.js.6c962347fef1f3cb5c9c.hot-update.js","sources":["webpack:///./pages/listPage.js"],"sourcesContent":["import Header from '../components/Header'\nimport Layout from '../components/MyLayout.js'\nimport MinuteTranscript from '../components/MinuteTranscript'\nimport Head from 'next/head'\nimport axios from 'axios';\nimport { withRouter } from 'next/router'\n\nimport { Tab , Col , ListGroup , Row , ListGroupItem } from 'react-bootstrap';\n\nexport default withRouter( class TranscriptLists extends React.Component {\n\n\n  constructor(props, context) {\n    super(props, context);\n    this.state ={\n      url  : 'hi',\n      lines: [],\n    }\n  }\n\n  format(){\n    let lines = this.state.url.split(/(\\[\\*{7}\\s.*\\])/)\n\n    for (let i = 0; i < lines.length; i++) {\n      let line = lines[i]\n\n      console.log(i,line)\n    }\n    this.setState({lines:lines})\n\n  }\n  componentWillMount() {\n    const { router } = this.props\n    this.setState( {url:router.query.url})\n    console.log(router.query.url)\n  }\n  componentDidMount(){this.format()}\n\n  Iterate = () => {\n    let regex = /\\[\\*{7}\\s(.*)\\]/i\n    return (\n      this.state.lines.map((each)=>{\n        let match = each.match(regex)\n\n        if(typeof match == 'null'){return}\n        console.log('heyo',match)\n        return (\n        <ListGroup.Item action href={each}>\n        {each.match(regex)}\n        </ListGroup.Item>\n        )\n      }\n    ))\n  }\n  render () {\n    console.log()\n    // Return properties\n    return (\n      <div>\n        <Head>\n            <title>League Table</title>\n            <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n            <link rel=\"stylesheet\" href=\"https://unpkg.com/purecss@0.6.1/build/pure-min.css\" />\n          <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css\" />\n          <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\n        </Head>\n        {/* <div className='tableStyle'>\n            {\n              this.props.data.map( (each) => {\n                return (\n                  <center>\n                    <MinuteTranscript data={each}/>\n                  </center>\n                )\n              })\n            }\n        </div> */}\n        <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\n\n          <Row>\n            <Col sm={4}>\n              <ListGroup>\n                <this.Iterate />\n                <ListGroup.Item action href=\"#link1\">\n                  Link 1\n                </ListGroup.Item>\n                <ListGroup.Item action href=\"#link2\">\n                  Link 2\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col sm={8}>\n              <Tab.Content>\n                <Tab.Pane eventKey=\"#link1\">\n                dafjdk\n                <textarea rows=\"24\" cols=\"170\" value={this.state.url}/>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"#link2\">\n                dakflj\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n        <style jsx global>{`\n          .tableStyle {\n              text-align: center;\n              padding   : 50px;\n          }\n        `}</style>\n      </div>\n    );\n  }\n\n})\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA2BA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAxCA;AACA;AACA;AAFA;AAFA;AAMA;AACA;AAVA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AArBA;AAAA;AAAA;AAsBA;AAEA;AAAA;AAAA;AACA;AACA;AA1BA;AAAA;AAAA;AA2BA;AAAA;AA3BA;AAAA;AAAA;AA8CA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvCA;AAAA;AAAA;AAAA;AAsDA;AAvGA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}